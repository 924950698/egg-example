2020-10-06 09:07:45,212 INFO 78750 [egg-sequelize](1ms) Executed (default): SELECT 1+1 AS result
2020-10-06 09:09:40,388 INFO 78750 [egg-sequelize](4ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:09:42,369 INFO 78750 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:09:43,982 INFO 78750 [egg-sequelize](4ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:09:45,356 INFO 78750 [egg-sequelize](5ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:10:23,002 INFO 78750 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:10:24,413 INFO 78750 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:10:59,539 INFO 78750 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:11:02,450 INFO 78750 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:11:04,094 INFO 78750 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:15:02,157 INFO 78750 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:15:04,808 INFO 78750 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:15:25,409 INFO 78750 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:15:39,012 INFO 78750 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:15:51,562 INFO 78750 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:15:52,876 INFO 78750 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:15:53,923 INFO 78750 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:15:55,092 INFO 78750 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:17:53,353 INFO 78750 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:17:53,361 INFO 78750 [egg-sequelize](4ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:18:12,258 INFO 78750 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:18:15,122 INFO 78750 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:19:43,297 INFO 78750 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:19:43,302 INFO 78750 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:19:51,232 INFO 78750 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:19:51,238 INFO 78750 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:19:55,122 INFO 78750 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:19:55,151 INFO 78750 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:19:57,005 INFO 78750 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:19:57,012 INFO 78750 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:21:24,345 INFO 78750 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:21:24,350 INFO 78750 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:21:55,825 INFO 78750 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:21:55,869 INFO 78750 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:22:20,494 INFO 78750 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:22:20,540 INFO 78750 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:24:37,842 INFO 78750 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:24:37,893 INFO 78750 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 09:25:31,566 INFO 78750 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` WHERE `gannt`.`label` = '5';
2020-10-06 09:25:58,060 INFO 78750 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 10:41:26,879 INFO 81218 [egg-sequelize](1ms) Executed (default): SELECT 1+1 AS result
2020-10-06 10:42:17,771 INFO 81260 [egg-sequelize](1ms) Executed (default): SELECT 1+1 AS result
2020-10-06 10:42:21,201 INFO 81260 [egg-sequelize](6ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 10:42:34,986 INFO 81260 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 10:42:34,996 INFO 81260 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 10:42:56,289 INFO 81260 [egg-sequelize](8ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 10:43:49,901 INFO 81260 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 10:43:49,910 INFO 81260 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 10:43:53,141 INFO 81260 [egg-sequelize](8ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 10:54:25,884 INFO 81608 [egg-sequelize](0ms) Executed (default): SELECT 1+1 AS result
2020-10-06 10:54:33,145 ERROR 81608 [-/192.168.0.100/-/7ms GET /gannt/lists] nodejs.TypeError: this.ctx.model.Gannt.find is not a function
    at GanntController.lists (/Users/lxd/Desktop/mine/egg-example/app/controller/gannt.js:29:47)
    at Object.callFn (/Users/lxd/Desktop/mine/egg-example/node_modules/egg-core/lib/utils/index.js:44:21)
    at Object.classControllerMiddleware (/Users/lxd/Desktop/mine/egg-example/node_modules/egg-core/lib/loader/mixin/controller.js:87:20)
    at Object.callFn (/Users/lxd/Desktop/mine/egg-example/node_modules/@eggjs/router/lib/utils.js:12:21)
    at wrappedController (/Users/lxd/Desktop/mine/egg-example/node_modules/@eggjs/router/lib/egg_router.js:322:18)
    at dispatch (/Users/lxd/Desktop/mine/egg-example/node_modules/koa-compose/index.js:44:32)
    at next (/Users/lxd/Desktop/mine/egg-example/node_modules/koa-compose/index.js:45:18)
    at /Users/lxd/Desktop/mine/egg-example/node_modules/@eggjs/router/lib/router.js:190:18
    at dispatch (/Users/lxd/Desktop/mine/egg-example/node_modules/koa-compose/index.js:44:32)
    at /Users/lxd/Desktop/mine/egg-example/node_modules/koa-compose/index.js:36:12
headers: {"Access-Control-Allow-Origin":"*","vary":"Origin"}
pid: 81608
hostname: localhost

2020-10-06 10:55:53,660 INFO 81665 [egg-sequelize](1ms) Executed (default): SELECT 1+1 AS result
2020-10-06 10:55:56,863 ERROR 81665 [-/192.168.0.100/-/13ms GET /gannt/lists] nodejs.TypeError: this.ctx.model.Gannt.find(...).count is not a function
    at GanntController.lists (/Users/lxd/Desktop/mine/egg-example/app/controller/gannt.js:29:56)
    at Object.callFn (/Users/lxd/Desktop/mine/egg-example/node_modules/egg-core/lib/utils/index.js:44:21)
    at Object.classControllerMiddleware (/Users/lxd/Desktop/mine/egg-example/node_modules/egg-core/lib/loader/mixin/controller.js:87:20)
    at Object.callFn (/Users/lxd/Desktop/mine/egg-example/node_modules/@eggjs/router/lib/utils.js:12:21)
    at wrappedController (/Users/lxd/Desktop/mine/egg-example/node_modules/@eggjs/router/lib/egg_router.js:322:18)
    at dispatch (/Users/lxd/Desktop/mine/egg-example/node_modules/koa-compose/index.js:44:32)
    at next (/Users/lxd/Desktop/mine/egg-example/node_modules/koa-compose/index.js:45:18)
    at /Users/lxd/Desktop/mine/egg-example/node_modules/@eggjs/router/lib/router.js:190:18
    at dispatch (/Users/lxd/Desktop/mine/egg-example/node_modules/koa-compose/index.js:44:32)
    at /Users/lxd/Desktop/mine/egg-example/node_modules/koa-compose/index.js:36:12
headers: {"Access-Control-Allow-Origin":"*","vary":"Origin"}
pid: 81665
hostname: localhost

2020-10-06 10:55:56,877 INFO 81665 [egg-sequelize](20ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt`;
2020-10-06 11:01:06,096 INFO 81832 [egg-sequelize](1ms) Executed (default): SELECT 1+1 AS result
2020-10-06 11:01:08,543 ERROR 81832 [-/192.168.0.100/-/6ms GET /gannt/lists] nodejs.ReferenceError: ctx is not defined
    at GanntController.lists (/Users/lxd/Desktop/mine/egg-example/app/controller/gannt.js:26:31)
    at Object.callFn (/Users/lxd/Desktop/mine/egg-example/node_modules/egg-core/lib/utils/index.js:44:21)
    at Object.classControllerMiddleware (/Users/lxd/Desktop/mine/egg-example/node_modules/egg-core/lib/loader/mixin/controller.js:87:20)
    at Object.callFn (/Users/lxd/Desktop/mine/egg-example/node_modules/@eggjs/router/lib/utils.js:12:21)
    at wrappedController (/Users/lxd/Desktop/mine/egg-example/node_modules/@eggjs/router/lib/egg_router.js:322:18)
    at dispatch (/Users/lxd/Desktop/mine/egg-example/node_modules/koa-compose/index.js:44:32)
    at next (/Users/lxd/Desktop/mine/egg-example/node_modules/koa-compose/index.js:45:18)
    at /Users/lxd/Desktop/mine/egg-example/node_modules/@eggjs/router/lib/router.js:190:18
    at dispatch (/Users/lxd/Desktop/mine/egg-example/node_modules/koa-compose/index.js:44:32)
    at /Users/lxd/Desktop/mine/egg-example/node_modules/koa-compose/index.js:36:12
headers: {"Access-Control-Allow-Origin":"*","vary":"Origin"}
pid: 81832
hostname: localhost

2020-10-06 11:01:18,480 INFO 81850 [egg-sequelize](2ms) Executed (default): SELECT 1+1 AS result
2020-10-06 11:01:20,305 ERROR 81850 [-/192.168.0.100/-/7ms GET /gannt/lists] nodejs.ReferenceError: Problem is not defined
    at GanntController.lists (/Users/lxd/Desktop/mine/egg-example/app/controller/gannt.js:29:20)
    at Object.callFn (/Users/lxd/Desktop/mine/egg-example/node_modules/egg-core/lib/utils/index.js:44:21)
    at Object.classControllerMiddleware (/Users/lxd/Desktop/mine/egg-example/node_modules/egg-core/lib/loader/mixin/controller.js:87:20)
    at Object.callFn (/Users/lxd/Desktop/mine/egg-example/node_modules/@eggjs/router/lib/utils.js:12:21)
    at wrappedController (/Users/lxd/Desktop/mine/egg-example/node_modules/@eggjs/router/lib/egg_router.js:322:18)
    at dispatch (/Users/lxd/Desktop/mine/egg-example/node_modules/koa-compose/index.js:44:32)
    at next (/Users/lxd/Desktop/mine/egg-example/node_modules/koa-compose/index.js:45:18)
    at /Users/lxd/Desktop/mine/egg-example/node_modules/@eggjs/router/lib/router.js:190:18
    at dispatch (/Users/lxd/Desktop/mine/egg-example/node_modules/koa-compose/index.js:44:32)
    at /Users/lxd/Desktop/mine/egg-example/node_modules/koa-compose/index.js:36:12
headers: {"Access-Control-Allow-Origin":"*","vary":"Origin"}
pid: 81850
hostname: localhost

2020-10-06 11:01:33,843 INFO 81872 [egg-sequelize](0ms) Executed (default): SELECT 1+1 AS result
2020-10-06 11:01:36,243 INFO 81872 [egg-sequelize](4ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:01:36,253 INFO 81872 [egg-sequelize](22ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:02:49,926 INFO 81872 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:02:49,927 INFO 81872 [egg-sequelize](3ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:02:49,938 INFO 81872 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:02:49,939 INFO 81872 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:02:52,102 INFO 81872 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:02:52,105 INFO 81872 [egg-sequelize](6ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:03:05,871 INFO 81872 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:03:05,873 INFO 81872 [egg-sequelize](3ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:03:05,886 INFO 81872 [egg-sequelize](8ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:03:05,903 INFO 81872 [egg-sequelize](25ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:03:07,736 INFO 81872 [egg-sequelize](4ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:03:07,741 INFO 81872 [egg-sequelize](10ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:04:08,159 INFO 81872 [egg-sequelize](12ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:04:08,164 INFO 81872 [egg-sequelize](17ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:04:08,169 INFO 81872 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:04:08,173 INFO 81872 [egg-sequelize](6ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:04:10,859 INFO 81872 [egg-sequelize](8ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:04:10,868 INFO 81872 [egg-sequelize](18ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:04:27,985 INFO 81872 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:04:27,986 INFO 81872 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:04:28,053 INFO 81872 [egg-sequelize](4ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:04:28,064 INFO 81872 [egg-sequelize](15ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:04:30,796 INFO 81872 [egg-sequelize](4ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:04:30,798 INFO 81872 [egg-sequelize](6ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:04:37,583 INFO 81872 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:04:37,587 INFO 81872 [egg-sequelize](6ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:04:37,599 INFO 81872 [egg-sequelize](5ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:04:37,613 INFO 81872 [egg-sequelize](20ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:04:49,554 INFO 81872 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:04:49,566 INFO 81872 [egg-sequelize](15ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:06:15,781 INFO 81872 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:06:15,783 INFO 81872 [egg-sequelize](4ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:06:15,801 INFO 81872 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:06:15,804 INFO 81872 [egg-sequelize](6ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:09:38,712 INFO 81872 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:09:38,712 INFO 81872 [egg-sequelize](1ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:09:38,721 INFO 81872 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:09:38,721 INFO 81872 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:10:39,878 INFO 82213 [egg-sequelize](1ms) Executed (default): SELECT 1+1 AS result
2020-10-06 11:10:49,591 INFO 82213 [egg-sequelize](26ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:10:49,596 ERROR 82213 [-/192.168.0.100/-/44ms GET /gannt/lists] nodejs.SequelizeDatabaseError: Undeclared variable: NaN
    at Query.formatError (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:239:16)
    at Query.run (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:54:18)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
name: "SequelizeDatabaseError"
parent: {"code":"ER_SP_UNDECLARED_VAR","errno":1327,"sqlState":"42000","sqlMessage":"Undeclared variable: NaN","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT NaN, 10000000000000;"}
original: {"code":"ER_SP_UNDECLARED_VAR","errno":1327,"sqlState":"42000","sqlMessage":"Undeclared variable: NaN","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT NaN, 10000000000000;"}
sql: "SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT NaN, 10000000000000;"
parameters: undefined
headers: {"Access-Control-Allow-Origin":"*","vary":"Origin"}
pid: 82213
hostname: localhost

2020-10-06 11:11:21,109 INFO 82242 [egg-sequelize](1ms) Executed (default): SELECT 1+1 AS result
2020-10-06 11:11:24,087 INFO 82242 [egg-sequelize](21ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:11:24,093 ERROR 82242 [-/192.168.0.100/-/38ms GET /gannt/lists] nodejs.SequelizeDatabaseError: Undeclared variable: NaN
    at Query.formatError (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:239:16)
    at Query.run (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:54:18)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
name: "SequelizeDatabaseError"
parent: {"code":"ER_SP_UNDECLARED_VAR","errno":1327,"sqlState":"42000","sqlMessage":"Undeclared variable: NaN","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT NaN, 10000000000000;"}
original: {"code":"ER_SP_UNDECLARED_VAR","errno":1327,"sqlState":"42000","sqlMessage":"Undeclared variable: NaN","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT NaN, 10000000000000;"}
sql: "SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT NaN, 10000000000000;"
parameters: undefined
headers: {"Access-Control-Allow-Origin":"*","vary":"Origin"}
pid: 82242
hostname: localhost

2020-10-06 11:12:37,621 INFO 82293 [egg-sequelize](1ms) Executed (default): SELECT 1+1 AS result
2020-10-06 11:12:40,192 INFO 82305 [egg-sequelize](0ms) Executed (default): SELECT 1+1 AS result
2020-10-06 11:13:49,164 ERROR 82305 [-/192.168.0.100/-/15ms GET /gannt/lists?currentPage=] nodejs.SequelizeDatabaseError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1
    at Query.formatError (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:239:16)
    at Query.run (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:54:18)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
name: "SequelizeDatabaseError"
parent: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"}
original: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"}
sql: "SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"
parameters: undefined
headers: {"Access-Control-Allow-Origin":"*","vary":"Origin"}
pid: 82305
hostname: localhost

2020-10-06 11:13:49,169 INFO 82305 [egg-sequelize](7ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:13:49,179 ERROR 82305 [-/192.168.0.100/-/2ms GET /gannt/lists?currentPage=] nodejs.SequelizeDatabaseError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1
    at Query.formatError (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:239:16)
    at Query.run (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:54:18)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
name: "SequelizeDatabaseError"
parent: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"}
original: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"}
sql: "SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"
parameters: undefined
headers: {"Access-Control-Allow-Origin":"*","vary":"Origin"}
pid: 82305
hostname: localhost

2020-10-06 11:13:49,180 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:13:52,952 ERROR 82305 [-/192.168.0.100/-/7ms GET /gannt/lists?currentPage=] nodejs.SequelizeDatabaseError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1
    at Query.formatError (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:239:16)
    at Query.run (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:54:18)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
name: "SequelizeDatabaseError"
parent: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"}
original: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"}
sql: "SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"
parameters: undefined
headers: {"Access-Control-Allow-Origin":"*","vary":"Origin"}
pid: 82305
hostname: localhost

2020-10-06 11:13:52,958 INFO 82305 [egg-sequelize](12ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:14:08,157 ERROR 82305 [-/192.168.0.100/-/5ms GET /gannt/lists?currentPage=] nodejs.SequelizeDatabaseError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1
    at Query.formatError (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:239:16)
    at Query.run (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:54:18)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
name: "SequelizeDatabaseError"
parent: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"}
original: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"}
sql: "SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"
parameters: undefined
headers: {"Access-Control-Allow-Origin":"*","vary":"Origin"}
pid: 82305
hostname: localhost

2020-10-06 11:14:08,158 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:14:08,213 ERROR 82305 [-/192.168.0.100/-/4ms GET /gannt/lists?currentPage=] nodejs.SequelizeDatabaseError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1
    at Query.formatError (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:239:16)
    at Query.run (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:54:18)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
name: "SequelizeDatabaseError"
parent: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"}
original: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"}
sql: "SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"
parameters: undefined
headers: {"Access-Control-Allow-Origin":"*","vary":"Origin"}
pid: 82305
hostname: localhost

2020-10-06 11:14:08,218 INFO 82305 [egg-sequelize](8ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:14:10,332 ERROR 82305 [-/192.168.0.100/-/4ms GET /gannt/lists?currentPage=] nodejs.SequelizeDatabaseError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1
    at Query.formatError (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:239:16)
    at Query.run (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:54:18)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
name: "SequelizeDatabaseError"
parent: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"}
original: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"}
sql: "SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"
parameters: undefined
headers: {"Access-Control-Allow-Origin":"*","vary":"Origin"}
pid: 82305
hostname: localhost

2020-10-06 11:14:10,335 INFO 82305 [egg-sequelize](6ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:14:28,663 INFO 82305 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:14:28,664 INFO 82305 [egg-sequelize](5ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:14:28,724 INFO 82305 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:14:28,727 INFO 82305 [egg-sequelize](6ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:14:30,715 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:14:30,721 INFO 82305 [egg-sequelize](7ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:14:40,455 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:14:40,455 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:14:44,876 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 20, 10;
2020-10-06 11:14:44,876 INFO 82305 [egg-sequelize](3ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:14:59,083 INFO 82305 [egg-sequelize](4ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:14:59,085 INFO 82305 [egg-sequelize](6ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:15:06,069 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:15:06,069 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:15:08,986 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 20, 10;
2020-10-06 11:15:08,986 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:15:12,917 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:15:12,918 INFO 82305 [egg-sequelize](3ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:15:13,760 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:15:13,760 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:15:34,287 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:15:34,288 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:15:35,514 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 20, 10;
2020-10-06 11:15:35,515 INFO 82305 [egg-sequelize](3ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:15:36,499 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:15:36,500 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:15:37,466 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:15:37,467 INFO 82305 [egg-sequelize](3ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:15:38,531 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:15:38,532 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:15:39,518 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 20, 10;
2020-10-06 11:15:39,518 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:15:40,428 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:15:40,428 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:15:41,208 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:15:41,208 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:15:42,165 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:15:42,165 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:15:43,287 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 20, 10;
2020-10-06 11:15:43,287 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:15:44,355 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:15:44,356 INFO 82305 [egg-sequelize](3ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:15:45,798 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:15:45,798 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:15:47,371 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:15:47,371 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:15:49,470 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:15:49,471 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:15:50,660 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:15:50,660 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:16:29,368 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:16:29,369 INFO 82305 [egg-sequelize](3ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:16:30,342 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 20, 10;
2020-10-06 11:16:30,342 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:16:32,593 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:16:32,593 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:16:33,164 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:16:33,165 INFO 82305 [egg-sequelize](3ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:16:34,564 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:16:34,565 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:16:36,107 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 20, 10;
2020-10-06 11:16:36,107 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:24:03,805 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:24:03,805 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:24:06,594 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:24:06,595 INFO 82305 [egg-sequelize](3ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:24:07,623 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 20, 10;
2020-10-06 11:24:07,624 INFO 82305 [egg-sequelize](3ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:24:09,123 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:24:09,124 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:24:10,472 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 20, 10;
2020-10-06 11:24:10,472 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:24:20,931 INFO 82305 [egg-sequelize](0ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` WHERE `gannt`.`id` = 27;
2020-10-06 11:24:20,940 INFO 82305 [egg-sequelize](5ms) Executed (default): UPDATE `gannt` SET `label`=?,`start`=?,`endDate`=?,`type`=?,`proType`=? WHERE `id` = ?
2020-10-06 11:24:20,979 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:24:20,981 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 20, 10;
2020-10-06 11:24:23,251 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:24:23,252 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:24:25,741 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 20, 10;
2020-10-06 11:24:25,742 INFO 82305 [egg-sequelize](3ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:24:27,188 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:24:27,188 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:24:28,158 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:24:28,159 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:24:38,696 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` WHERE `gannt`.`id` = 17;
2020-10-06 11:24:38,699 INFO 82305 [egg-sequelize](2ms) Executed (default): UPDATE `gannt` SET `label`=?,`start`=?,`endDate`=?,`type`=?,`proType`=? WHERE `id` = ?
2020-10-06 11:24:38,737 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:24:38,738 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:24:40,347 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 20, 10;
2020-10-06 11:24:40,348 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:24:41,627 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:24:41,627 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:24:42,686 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:24:42,686 INFO 82305 [egg-sequelize](3ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:28:15,760 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:28:15,760 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:28:17,165 INFO 82305 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 20, 10;
2020-10-06 11:28:17,166 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:28:33,332 INFO 82305 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` WHERE `gannt`.`label` = '5';
2020-10-06 11:30:14,355 INFO 82789 [egg-sequelize](1ms) Executed (default): SELECT 1+1 AS result
2020-10-06 11:30:29,444 INFO 82807 [egg-sequelize](1ms) Executed (default): SELECT 1+1 AS result
2020-10-06 11:32:12,964 INFO 82807 [egg-sequelize](1ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:32:12,966 INFO 82807 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:32:12,974 INFO 82807 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:32:12,975 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:32:51,659 INFO 82807 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:32:51,660 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:33:04,076 INFO 82807 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 10, 10;
2020-10-06 11:33:04,077 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:33:05,922 INFO 82807 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 20, 10;
2020-10-06 11:33:05,923 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:33:07,112 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:33:07,112 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:33:15,137 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:33:15,137 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:33:19,452 INFO 82807 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 20, 10;
2020-10-06 11:33:19,452 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:33:27,395 INFO 82807 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:33:27,396 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:34:30,408 INFO 82807 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:34:30,417 INFO 82807 [egg-sequelize](13ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:35:15,690 INFO 82807 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:35:15,690 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:35:15,713 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:35:15,718 INFO 82807 [egg-sequelize](7ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:35:25,328 INFO 82807 [egg-sequelize](5ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:35:25,340 INFO 82807 [egg-sequelize](17ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:35:25,346 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:35:25,348 INFO 82807 [egg-sequelize](4ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:35:27,675 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:35:27,678 INFO 82807 [egg-sequelize](5ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:36:04,700 INFO 82807 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:36:04,708 INFO 82807 [egg-sequelize](9ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:36:04,726 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:36:04,729 INFO 82807 [egg-sequelize](6ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:45:26,399 ERROR 82807 [-/192.168.0.100/-/4ms GET /gannt/lists?currentPage=&currentPage=1] nodejs.SequelizeDatabaseError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1
    at Query.formatError (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:239:16)
    at Query.run (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:54:18)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
name: "SequelizeDatabaseError"
parent: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"}
original: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"}
sql: "SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"
parameters: undefined
headers: {"Access-Control-Allow-Origin":"*","vary":"Origin"}
pid: 82807
hostname: localhost

2020-10-06 11:45:26,402 INFO 82807 [egg-sequelize](6ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:45:26,407 ERROR 82807 [-/192.168.0.100/-/1ms GET /gannt/lists?currentPage=&currentPage=1] nodejs.SequelizeDatabaseError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1
    at Query.formatError (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:239:16)
    at Query.run (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:54:18)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
name: "SequelizeDatabaseError"
parent: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"}
original: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-10, 10' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"}
sql: "SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT -10, 10;"
parameters: undefined
headers: {"Access-Control-Allow-Origin":"*","vary":"Origin"}
pid: 82807
hostname: localhost

2020-10-06 11:45:26,408 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:45:31,243 INFO 82807 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:45:31,244 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:45:31,255 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:45:31,255 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:45:34,642 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:45:34,651 INFO 82807 [egg-sequelize](11ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:45:42,680 INFO 82807 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:45:42,681 INFO 82807 [egg-sequelize](4ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:45:42,694 INFO 82807 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:45:42,699 INFO 82807 [egg-sequelize](7ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:45:46,106 INFO 82807 [egg-sequelize](4ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:45:46,116 INFO 82807 [egg-sequelize](14ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:46:30,500 INFO 83377 [egg-sequelize](0ms) Executed (default): SELECT 1+1 AS result
2020-10-06 11:46:32,731 INFO 83377 [egg-sequelize](3ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:46:32,736 ERROR 83377 [-/192.168.0.100/-/20ms GET /gannt/lists?currentPage=1&currentSizes=10] nodejs.SequelizeDatabaseError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''10'' at line 1
    at Query.formatError (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:239:16)
    at Query.run (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:54:18)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
name: "SequelizeDatabaseError"
parent: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''10'' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, '10';"}
original: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''10'' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, '10';"}
sql: "SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, '10';"
parameters: undefined
headers: {"Access-Control-Allow-Origin":"*","vary":"Origin"}
pid: 83377
hostname: localhost

2020-10-06 11:47:24,664 INFO 83417 [egg-sequelize](1ms) Executed (default): SELECT 1+1 AS result
2020-10-06 11:47:26,902 INFO 83417 [egg-sequelize](18ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:47:26,905 ERROR 83417 [-/192.168.0.100/-/38ms GET /gannt/lists?currentPage=1&currentSizes=10] nodejs.SequelizeDatabaseError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''10'' at line 1
    at Query.formatError (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:239:16)
    at Query.run (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:54:18)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
name: "SequelizeDatabaseError"
parent: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''10'' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, '10';"}
original: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''10'' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, '10';"}
sql: "SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, '10';"
parameters: undefined
headers: {"Access-Control-Allow-Origin":"*","vary":"Origin"}
pid: 83417
hostname: localhost

2020-10-06 11:47:44,521 INFO 83443 [egg-sequelize](0ms) Executed (default): SELECT 1+1 AS result
2020-10-06 11:47:58,625 ERROR 83443 [-/192.168.0.100/-/22ms GET /gannt/lists?currentPage=1&currentSizes=10] nodejs.SequelizeDatabaseError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''10'' at line 1
    at Query.formatError (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:239:16)
    at Query.run (/Users/lxd/Desktop/mine/egg-example/node_modules/sequelize/lib/dialects/mysql/query.js:54:18)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
name: "SequelizeDatabaseError"
parent: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''10'' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, '10';"}
original: {"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''10'' at line 1","sql":"SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, '10';"}
sql: "SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, '10';"
parameters: undefined
headers: {"Access-Control-Allow-Origin":"*","vary":"Origin"}
pid: 83443
hostname: localhost

2020-10-06 11:47:58,633 INFO 83443 [egg-sequelize](15ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:48:42,561 INFO 83487 [egg-sequelize](0ms) Executed (default): SELECT 1+1 AS result
2020-10-06 11:48:46,595 INFO 83487 [egg-sequelize](17ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:48:46,598 INFO 83487 [egg-sequelize](5ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:48:50,708 INFO 83487 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 15;
2020-10-06 11:48:50,712 INFO 83487 [egg-sequelize](6ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:49:04,042 INFO 83487 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 15, 15;
2020-10-06 11:49:04,044 INFO 83487 [egg-sequelize](4ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:49:10,477 INFO 83487 [egg-sequelize](0ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 30, 30;
2020-10-06 11:49:10,491 INFO 83487 [egg-sequelize](4ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 30;
2020-10-06 11:49:10,492 INFO 83487 [egg-sequelize](9ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:49:10,493 INFO 83487 [egg-sequelize](16ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:49:21,867 INFO 83487 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:49:21,867 INFO 83487 [egg-sequelize](3ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:49:27,196 INFO 83487 [egg-sequelize](2ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 15;
2020-10-06 11:49:27,197 INFO 83487 [egg-sequelize](3ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:49:37,423 INFO 83487 [egg-sequelize](3ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 20;
2020-10-06 11:49:37,424 INFO 83487 [egg-sequelize](3ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:49:45,244 INFO 83487 [egg-sequelize](4ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 30;
2020-10-06 11:49:45,246 INFO 83487 [egg-sequelize](6ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:49:55,031 INFO 83487 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 0, 10;
2020-10-06 11:49:55,031 INFO 83487 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
2020-10-06 11:49:57,664 INFO 83487 [egg-sequelize](1ms) Executed (default): SELECT `id`, `label`, `user`, `start`, `endDate`, `duration`, `percent`, `type`, `proType`, `risk` FROM `gannt` AS `gannt` LIMIT 20, 10;
2020-10-06 11:49:57,665 INFO 83487 [egg-sequelize](2ms) Executed (default): SELECT count(*) AS `count` FROM `gannt` AS `gannt`;
